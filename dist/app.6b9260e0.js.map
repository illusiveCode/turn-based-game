{"version":3,"sources":["js/player.js","js/assets.js","js/game.js","js/app.js"],"names":["Player","name","image","weapon","lastId","id","damage","oldWeapon","lifePoints","location","row","column","shield","weapons","weapon2","weapon3","Game","players","document","querySelector","classList","remove","map","player","innerHTML","reset","i","placeItem","barrier","currentPlayer","Math","floor","random","length","detectTurn","cls","item","randomSquare","gridSquares","dataset","contains","getPlayerDistance","p1c","p1r","yDistance","abs","xDistance","y","x","getObstacleDistance","elm","r1","r2","r3","r4","c1","c2","c3","c4","r1c1","r2c2","r3c3","r4c4","add","element","direction","num","Number","availability","move1","move2","move3","addEventListener","movePlayer","e","oldPosition","newPosition","target","nodeName","path","outerHTML","detectRetaliation","retaliation","changeTurn","querySelectorAll","removeEventListener","north","south","east","west","attacker","opponent","retaliationModal","setTimeout","defend","attack","run","health","console","log","shieldStatus","tile","gameOver","highlightMoves","once","col","generateMap","newGame","player1","ironman","weapon1","generate","player2","capShield","weapon0"],"mappings":"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","file":"app.6b9260e0.js","sourceRoot":"..","sourcesContent":["class Player {\n  constructor(name, image, weapon, lastId = 0) {\n    this.id = lastId + 1;\n    this.name = name;\n    this.image = image;\n    this.weapon = weapon;\n  }\n\n  // Generating players with their inital stats\n  generate = () => {\n    return {\n      id: this.id,\n      name: this.name,\n      image: `<img src=\"${this.image}\" alt=\"${this.name}\" />`,\n      weapon: {\n        image: `<img src=\"${this.weapon}\" alt=\"\" data-damage=\"10\" />`,\n        damage: 50,\n        oldWeapon: \"\",\n      },\n      lifePoints: 100,\n      location: {\n        row: 0,\n        column: 0,\n      },\n      shield: false,\n    };\n  };\n}\n\nexport default Player;\n","import capShield from \"../images/cap-shield.png\";\nimport ironman from \"../images/ironman.png\";\nimport weapon0 from \"../images/space-stone.png\";\nimport weapon1 from \"../images/power-stone.png\";\nimport weapon2 from \"../images/soul-stone.png\";\nimport weapon3 from \"../images/gauntlet.png\";\nimport barrier from \"../images/barrier.png\";\n\nconst weapons = [weapon2, weapon3];\n\nexport { capShield, ironman, weapons, weapon0, barrier, weapon1 };\n","import { weapons, barrier } from \"./assets\";\n\n\n\nclass Game {\n  constructor(players) {\n    this.players = players;\n    this.gridSquares = document.querySelectorAll(\".grid-item\");\n    this.currentPlayer = null;\n  }\n  /*FUNCTION TO RESET THE GAME*/\n  reset = () => {\n\n    document.querySelector(\"#gameOverModal\").classList.remove(\"open\");\n\n    this.players.map((player) => {\n      document.querySelector(`#name${player.id}`).innerHTML = player.name;\n\n      document.querySelector(`#health${player.id}`).innerHTML =\n        player.lifePoints;\n\n      document.querySelector(`#weapon${player.id}`).innerHTML =\n        player.weapon.image;\n\n      document.querySelector(`#damage${player.id}`).innerHTML =\n        player.weapon.damage;\n\n      document.querySelector(`#shield${player.id}`).innerHTML = \"Unprotected\";\n    });\n  };\n\n  // calling function to reset the game\n  newGame = () => {\n    this.reset();\n\n\n    for (let i = 0; i < 12; i++) {\n      this.placeItem(\"barrier\", `<img src=${barrier} alt=\"\" />`);\n    }\n\n    let damage = 10;\n    for (const weapon of weapons) {\n      damage += 10;\n      this.placeItem(\n        \"weapon\",\n        `<img src=${weapon} alt=\"\" data-damage=\"${damage}\" />`\n      );\n    }\n\n    this.players.map((player) => {\n      this.placeItem(\"player\", player);\n    });\n\n\n    this.currentPlayer = this.players[\n      Math.floor(Math.random() * this.players.length)\n    ];\n\n    this.detectTurn();\n  };\n\n  // creating the map of the game\n  static generateMap = () => {\n    const map = document.querySelector(\"#game-board\");\n\n    let col = 0;\n    let row = 1;\n\n    map.innerHTML = \"\";\n\n    for (let column = 0; column < 81; column++) {\n      col++;\n\n      map.innerHTML += `<div class='grid-item' data-row=${row} data-column=${col}></div>`;\n\n      if (col === 9) {\n        col = 0;\n        row++;\n      }\n    }\n  };\n\n  placeItem = (cls, item) => {\n    const randomSquare = Math.floor(Math.random() * this.gridSquares.length);\n\n    // console.log({ randomSquare, tiles: this.gridSquares });\n\n    const { column, row } = this.gridSquares[randomSquare].dataset;\n\n    const getObstacleDistance = (row, column) => {\n\n      // console.log({row, column})\n\n      const elm = document.querySelector(`[data-row=\"${row}\"][data-column=\"${column}\"]`);\n\n      const r1 = document.querySelector(`[data-row=\"${row -1}\"][data-column=\"${column}\"]`);\n      const r2 = document.querySelector(`[data-row=\"${row -2}\"][data-column=\"${column}\"]`);\n      const r3 = document.querySelector(`[data-row=\"${row +1}\"][data-column=\"${column}\"]`);\n      const r4 = document.querySelector(`[data-row=\"${row +2}\"][data-column=\"${column}\"]`);\n\n\n      const c1 = document.querySelector(`[data-column=\"${column -1}\"][data-row=\"${row}\"]`);\n      const c2 = document.querySelector(`[data-column=\"${column -2}\"][data-row=\"${row}\"]`);\n      const c3 = document.querySelector(`[data-column=\"${column +1}\"][data-row=\"${row}\"]`);\n      const c4 = document.querySelector(`[data-column=\"${column +2}\"][data-row=\"${row}\"]`);\n\n      \n\n\n      if(r1 && r1.classList.contains(\"barrier\")) return true;\n      if(r2 && r2.classList.contains(\"barrier\")) return true;\n      if(r3 && r3.classList.contains(\"barrier\")) return true;\n      if(r4 && r4.classList.contains(\"barrier\")) return true;\n\n      if(c1 && c1.classList.contains(\"barrier\")) return true;\n      if(c2 && c2.classList.contains(\"barrier\")) return true;\n      if(c3 && c3.classList.contains(\"barrier\")) return true;\n      if(c4 && c4.classList.contains(\"barrier\")) return true;\n\n\n\n      const r1c1 = document.querySelector(`[data-row=\"${row+1}\"][data-column=\"${column+1}\"]`);\n\n      const r2c2 = document.querySelector(`[data-row=\"${row-1}\"][data-column=\"${column-1}\"]`);\n\n      const r3c3 = document.querySelector(`[data-row=\"${row-1}\"][data-column=\"${column+1}\"]`);\n\n      const r4c4 = document.querySelector(`[data-row=\"${row+1}\"][data-column=\"${column-1}\"]`);\n\n      if(r1c1 && r1c1.classList.contains(\"barrier\")) return true;\n      if(r2c2 && r2c2.classList.contains(\"barrier\")) return true;\n      if(r3c3 && r3c3.classList.contains(\"barrier\")) return true;\n      if(r4c4 && r4c4.classList.contains(\"barrier\")) return true;\n\n\n\n\n    }\n\n    const getPlayerDistance = (row, column) => {\n\n      if(this.players[0].location.row > 0) {\n      \n        const p1c = +this.players[0].location.column;\n        const p1r = +this.players[0].location.row;\n\n        const yDistance = Math.abs(p1r - row);\n        const xDistance = Math.abs(p1c - column)\n\n        // Check if P1 is in same column and less than 4 steps away from P2\n        if(p1c === column && yDistance <= 4) {\n          // Check if there's a barrier between two players\n          for (let i = 1; i <= yDistance; i++) {\n            if(p1r > row) {\n              const y = document.querySelector(`[data-row=\"${p1r - i}\"][data-column=\"${p1c}\"]`);\n              if(y && y.classList.contains(\"barrier\")) return false  \n            }else{\n              const y = document.querySelector(`[data-row=\"${p1r + i}\"][data-column=\"${p1c}\"]`);\n              if(y && y.classList.contains(\"barrier\")) return false\n            }\n          }\n\n          return true;\n        }\n\n        // Check if P1 is in same row and less than 4 steps away from P2\n        if(p1r === row && xDistance <= 4) {\n\n          // Check if there's a barrier between two players\n          for (let i = 1; i <= xDistance; i++) {\n            if(p1c > column) {\n              const x = document.querySelector(`[data-row=\"${p1r}\"][data-column=\"${p1c - i}\"]`);\n              if(x && x.classList.contains(\"barrier\")) return false\n            }else{\n              const x = document.querySelector(`[data-row=\"${p1r}\"][data-column=\"${p1c + i}\"]`);\n              if(x && x.classList.contains(\"barrier\")) return false\n            }\n          }\n\n          return true;\n        }\n\n        if((xDistance === 1 && yDistance <= 3) || (yDistance === 1 && xDistance <= 3)) return true;\n\n      }\n    }\n\n    if (this.gridSquares[randomSquare].classList.contains(\"occupied\")) return this.placeItem(cls, item);\n\n\n    if (cls === \"player\") {\n\n      if (getPlayerDistance(+row, +column)) return this.placeItem(cls, item);      \n\n      this.players[item.id - 1].location = {column, row};\n\n      this.gridSquares[randomSquare].innerHTML = item.image;  \n\n    } else if (cls === \"barrier\") {\n      \n      if(getObstacleDistance(+row, +column)) return this.placeItem(cls, item); \n\n      // console.log({ r, c });\n\n      // if (r && c) return this.placeItem(cls, item);\n\n      this.gridSquares[randomSquare].innerHTML = item;\n    } else {\n      this.gridSquares[randomSquare].innerHTML = item;\n    }\n\n    this.gridSquares[randomSquare].classList.add(cls);\n    this.gridSquares[randomSquare].classList.add(\"occupied\");\n    \n  };\n\n  // highlight tiles for valid moves for current player\n  highlightMoves = () => {\n    const { row, column } = this.currentPlayer.location;\n\n    const element = (direction, num) => {\n      switch (direction) {\n        case \"north\":\n          return document.querySelector(\n            `[data-row=\"${row - num}\"][data-column=\"${column}\"]`\n          );\n        case \"south\":\n          return document.querySelector(\n            `[data-row=\"${Number(row) + num}\"][data-column=\"${column}\"]`\n          );\n        case \"west\":\n          return document.querySelector(\n            `[data-row=\"${row}\"][data-column=\"${Number(column) - num}\"]`\n          );\n        case \"east\":\n          return document.querySelector(\n            `[data-row=\"${row}\"][data-column=\"${Number(column) + num}\"]`\n          );\n        default:\n          break;\n      }\n    };\n\n    const availability = (direction) => {\n      const move1 = element(direction, 1);\n      const move2 = element(direction, 2);\n      const move3 = element(direction, 3);\n\n      if (!move1) return;\n      if (\n        move1.classList.contains(\"barrier\") ||\n        move1.classList.contains(\"player\")\n      )\n        return;\n      move1.classList.add(\"highlight\");\n      move1.addEventListener(\"click\", this.movePlayer);\n\n      if (!move2) return;\n      if (\n        move2.classList.contains(\"barrier\") ||\n        move2.classList.contains(\"player\")\n      )\n        return;\n      move2.classList.add(\"highlight\");\n      move2.addEventListener(\"click\", this.movePlayer);\n\n      if (!move3) return;\n      if (\n        move3.classList.contains(\"barrier\") ||\n        move3.classList.contains(\"player\")\n      )\n        return;\n      move3.classList.add(\"highlight\");\n      move3.addEventListener(\"click\", this.movePlayer);\n    };\n\n    availability(\"north\");\n    availability(\"south\");\n    availability(\"west\");\n    availability(\"east\");\n  };\n\n  movePlayer = (e) => {\n    const oldPosition = document.querySelector(\n      `[data-row=\"${this.currentPlayer.location.row}\"][data-column=\"${this.currentPlayer.location.column}\"]`\n    );\n\n    const newPosition = e.target.nodeName === \"IMG\" ? e.path[1] : e.target;\n    const player = this.players[this.currentPlayer.id - 1];\n\n    //remove image from old location\n    if (this.currentPlayer.weapon.oldWeapon) {\n      oldPosition.innerHTML = this.currentPlayer.weapon.oldWeapon;\n      oldPosition.classList.add(\"weapon\");\n\n      player.weapon.oldWeapon = null;\n    } else {\n      oldPosition.innerHTML = \"\";\n    }\n\n    oldPosition.classList.remove(\"player\");\n    //add image to new location\n\n    const { row, column } = newPosition.dataset;\n\n    if (e.target.nodeName === \"IMG\") {\n      newPosition.innerHTML = this.currentPlayer.image;\n      newPosition.classList.add(\"player\");\n\n      const image = e.target.outerHTML;\n      const damage = e.target.dataset.damage;\n\n      document.querySelector(\n        `#weapon${this.currentPlayer.id}`\n      ).innerHTML = image;\n\n      document.querySelector(\n        `#damage${this.currentPlayer.id}`\n      ).innerHTML = damage;\n\n      //change player location\n      player.location = { row, column };\n\n      player.weapon = {\n        image,\n        damage,\n        oldWeapon: this.currentPlayer.weapon.image,\n      };\n    } else {\n      newPosition.innerHTML = this.currentPlayer.image;\n      newPosition.classList.add(\"player\");\n      //change player location\n      player.location = { row, column };\n    }\n\n    this.players[this.currentPlayer.id - 1] = player;\n\n    if (this.detectRetaliation(column, row)) {\n      this.retaliation();\n    } else {\n      this.changeTurn();\n    }\n\n    //remove highlights of moves and click eventlistner from previous availbale moves\n    for (const elm of document.querySelectorAll(\".highlight\")) {\n      elm.classList.remove(\"highlight\");\n      elm.removeEventListener(\"click\", this.movePlayer);\n    }\n  };\n\n  detectRetaliation = (column, row) => {\n    const north = document.querySelector(\n      `[data-row=\"${row - 1}\"][data-column=\"${column}\"]`\n    );\n    const south = document.querySelector(\n      `[data-row=\"${Number(row) + 1}\"][data-column=\"${column}\"]`\n    );\n    const east = document.querySelector(\n      `[data-row=\"${row}\"][data-column=\"${Number(column) + 1}\"]`\n    );\n    const west = document.querySelector(\n      `[data-row=\"${row}\"][data-column=\"${column - 1}\"]`\n    );\n\n    if (north && north.classList.contains(\"player\")) return true;\n    if (south && south.classList.contains(\"player\")) return true;\n    if (east && east.classList.contains(\"player\")) return true;\n    if (west && west.classList.contains(\"player\")) return true;\n  };\n\n  retaliation = () => {\n    const attacker = this.currentPlayer;\n    this.currentPlayer = attacker.id === 1 ? this.players[1] : this.players[0];\n\n    const opponent = this.currentPlayer;\n\n    // Update player panels highlight\n    document.querySelector(`#player${attacker.id}`).classList.remove(\"current\");\n    document.querySelector(`#player${opponent.id}`).classList.add(\"current\");\n\n    const retaliationModal = document.querySelector(\"#retaliationModal\");\n\n    setTimeout(() => {\n      retaliationModal.classList.add(\"open\");\n    }, 500);\n\n    document.querySelector(\"#retaliationModal .avatar\").innerHTML =\n      opponent.image;\n\n    // Defend?\n    const defend = () => {\n      document.querySelector(\"#attack\").removeEventListener(\"click\", attack);\n      document.querySelector(\"#run\").removeEventListener(\"click\", run)\n      const health = opponent.lifePoints - attacker.weapon.damage / 2;\n\n      this.players[opponent.id - 1].lifePoints = health;\n      console.log(\"defend\", opponent.id, health);\n\n      document.querySelector(`#health${opponent.id}`).innerHTML = health;\n\n      const shieldStatus = document.querySelector(`#shield${opponent.id}`);\n      shieldStatus.innerHTML = \"Protected\";\n      shieldStatus.classList.add(\"protected\");\n\n      document.querySelector(`#health${opponent.id}`).innerHTML = health;\n\n      retaliationModal.classList.remove(\"open\");\n\n      // Remove highlights\n      for (const tile of document.querySelectorAll(\".highlight\")) {\n        tile.classList.remove(\"highlight\");\n        tile.removeEventListener(\"click\", this.movePlayer);\n      }\n\n      if (this.gameOver(opponent, attacker)) return;\n\n      this.retaliation();\n\n    }\n\n    // Defend and Run?\n    const run = () => {\n      document.querySelector(\"#attack\").removeEventListener(\"click\", attack)\n      document.querySelector(\"#defend\").removeEventListener(\"click\", defend)\n      const health = opponent.lifePoints - attacker.weapon.damage / 2;\n\n      this.players[opponent.id - 1].lifePoints = health;\n      console.log(\"defend\", opponent.id, health);\n\n      document.querySelector(`#health${opponent.id}`).innerHTML = health;\n\n      const shieldStatus = document.querySelector(`#shield${opponent.id}`);\n      shieldStatus.innerHTML = \"Protected\";\n      shieldStatus.classList.add(\"protected\");\n\n      document.querySelector(`#health${opponent.id}`).innerHTML = health;\n\n      retaliationModal.classList.remove(\"open\");\n\n      // Remove highlights\n      for (const tile of document.querySelectorAll(\".highlight\")) {\n        tile.classList.remove(\"highlight\");\n        tile.removeEventListener(\"click\", this.movePlayer);\n      }\n\n      if (this.gameOver(opponent, attacker)) return;\n\n      this.highlightMoves();\n    }\n    // Attack?\n    const attack = () => {\n      document.querySelector(\"#defend\").removeEventListener(\"click\", defend);\n      document.querySelector(\"#run\").removeEventListener(\"click\", run)\n      const health = opponent.lifePoints - attacker.weapon.damage;\n      console.log(\"attack\", opponent.id, health);\n\n      retaliationModal.classList.remove(\"open\");\n\n      this.players[opponent.id - 1].lifePoints = health;\n      document.querySelector(`#health${opponent.id}`).innerHTML = health;\n\n      const shieldStatus = document.querySelector(`#shield${opponent.id}`);\n      shieldStatus.innerHTML = \"Unprotected\";\n      shieldStatus.classList.remove(\"protected\");\n\n      // Remove highlights\n      for (const tile of document.querySelectorAll(\".highlight\")) {\n        tile.classList.remove(\"highlight\");\n        tile.removeEventListener(\"click\", this.movePlayer);\n      }\n\n      if (this.gameOver(opponent, attacker)) return;\n\n      this.retaliation();\n    };\n\n    document.querySelector(\"#attack\").addEventListener(\"click\", attack, { once: true });\n    document.querySelector(\"#defend\").addEventListener(\"click\", defend, { once: true });\n    document.querySelector(\"#run\").addEventListener(\"click\", run, { once: true });\n\n  };\n\n  gameOver = (opponent, attacker) => {\n    if (opponent.lifePoints <= 0) {\n      document.querySelector(\"#retaliationModal\").classList.remove(\"open\");\n      document.querySelector(\"#gameOverModal\").classList.add(\"open\");\n\n      document.querySelector(\n        \"#gameOverModal p:first-of-type\"\n      ).innerHTML = `${attacker.name}, you are the winner :)`;\n      document.querySelector(\n        \"#gameOverModal p:last-of-type\"\n      ).innerHTML = `${opponent.name}, you have lost :(`;\n\n      // document\n      //   .querySelector(\"#gameOverModal button\")\n      //   .addEventListener(\"click\", () => {\n      //     document.querySelector(\"#gameOverModal\").classList.remove(\"open\");\n      //   });\n\n      return true;\n    }\n  };\n\n  detectTurn = () => {\n    document\n      .querySelector(`#player${this.currentPlayer.id}`)\n      .classList.add(\"current\");\n\n    setTimeout(this.highlightMoves, 500);\n  };\n\n  changeTurn = () => {\n    for (const elm of document.querySelectorAll(\".sidebar\")) {\n      elm.classList.remove(\"current\");\n    }\n\n    //this.currentPlayer = this.players[this.currentPlayer.id]\n\n    if (this.currentPlayer.id === 1) {\n      this.currentPlayer = this.players[1];\n    } else {\n      this.currentPlayer = this.players[0];\n    }\n\n    this.detectTurn();\n  };\n \n}\n\nexport default Game;\n","import Player from \"./player\";\nimport Game from \"./game\";\n\nimport { capShield, ironman, weapons, weapon1, weapon0 } from \"./assets\";\n\nGame.generateMap();\n\nconst newGame = () => {\n  document.querySelector(\"#gameOverModal\").classList.remove(\"open\");\n\n  const player1 = new Player(\"Ironman\", ironman, weapon1).generate();\n\n  const player2 = new Player(\n    \"Cap America\",\n    capShield,\n    weapon0,\n    player1.id\n  ).generate();\n\n\n\n  Game.generateMap();\n\n  // console.log(player1, player2)\n\n  const game = new Game([player1, player2]);\n\n  game.newGame();\n};\n\ndocument.querySelector(\"#newGame\").addEventListener(\"click\", newGame);\ndocument.querySelector(\"#newGame2\").addEventListener(\"click\", newGame);\n\ndocument.querySelector(\"#rules\").addEventListener(\"click\", () => {\n  document.querySelector(\"#rulesModal\").classList.add(\"open\");\n});\ndocument.querySelector(\"#closeRules\").addEventListener(\"click\", () => {\n  document.querySelector(\"#rulesModal\").classList.remove(\"open\");\n});\n"]}